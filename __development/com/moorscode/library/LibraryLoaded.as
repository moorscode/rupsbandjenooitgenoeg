package com.moorscode.library {		import flash.events.Event;		public class LibraryLoader() {		private static var loadLibraries:Array = new Array();		private static var loadedLibraries:Array = new Array();				private static var libraryPath:String = "";		private static var libraryName:String = ""; // current library loading.				private static var dispatcher:EventDispatcher = new EventDispatcher();				public function LibraryLoader():void {			loadLibraries.push("levels");			loadLibraries.push("menus");		}				public function setPath(path:String):void {			libraryPath = path;		}				public function load(library:String):void {			loadLibraries.push(library);			loadNextLibrary();		}				private function loadNextLibrary():void {			if(loadedLibraries.length == loadLibraries.length) {				dispatcher.dispatchEvent(new Event(Event.COMPLETE));				return;			}						libraryName = loadLibraries[loadedLibraries.length];						var request = new URLRequest("assets/"+libraryPath+"/"+libraryName+".swf");				request.method = URLRequestMethod.POST;				request.data = true;						// laad library						var library = new Loader();				library.contentLoaderInfo.addEventListener(Event.INIT, afterLoading, false, 0, true);				library.load(request, new LoaderContext(false, ApplicationDomain.currentDomain));		}				private static function afterLoading(event:Event):void {			loadedLibraries.push(libraryName);			trace("Loaded library: " + libraryName);		}				public function addEventListener(type:String, listener:Function):void {			dispatcher.addEventListener(type, listener, false, 0, true);		}				public function removeEventListener(type:String, listener:Function):void {			dispatcher.removeEventListener(type, listener);		}	}}
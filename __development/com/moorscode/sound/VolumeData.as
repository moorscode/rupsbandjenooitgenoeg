package com.moorscode.sound {	import flash.utils.ByteArray;	import flash.media.SoundMixer;		public class VolumeData {		private var bytes:ByteArray;				public function VolumeData():void {			bytes = new ByteArray();		}				public function getSpectrum():Array {			var result:Array;						try {				SoundMixer.computeSpectrum(bytes, false, 0);				result = getTopVolume(bytes);			} catch (e:Error) {				// the computeSpectrum() throws a "Security violation" error occurs sometimes. Ignore it.			}						// returns an array with ['left'] max value (0-1) and ['right'] max value (0-1)			return result;		}				private function getTopVolume(bytes:ByteArray):Array {			var result:Array = new Array();			result['left'] = 0.0;			result['right'] = 0.0;						var channel:String = 'left';			for(var i:uint = 0; i < 512; i++) {				var value:Number = bytes.readFloat();				channel = (i < 256)?'left':'right';				result[channel] = (result[channel] < value)?value:result[channel];			}						return result;		}	}}
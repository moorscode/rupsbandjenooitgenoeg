package com.moorscode.input {	/** KeyLabels provides human readable labels for keys that can be looked up by keycode.	  */	final public class KeyLabels {				private static const UNDEFINED:String = "unknown key";				private static const LOCATIONS:Array = [			"STANDARD",			"LEFT",			"RIGHT",			"NUM_PAD"		];				private static const LABELS:Array = [			UNDEFINED, /* 0 */			UNDEFINED,			UNDEFINED,			UNDEFINED,			UNDEFINED,			UNDEFINED,			UNDEFINED,			UNDEFINED,			"BACKSPACE",			"TAB",			UNDEFINED,			UNDEFINED,			"CENTER",			"ENTER",			UNDEFINED,			UNDEFINED,			"SHIFT",			"CONTROL/COMMAND",			UNDEFINED,			"PAUSE",			"CAPS LOCK",			UNDEFINED,			UNDEFINED,			UNDEFINED,			UNDEFINED,			UNDEFINED,			UNDEFINED,			"ESCAPE",			UNDEFINED,			UNDEFINED,			UNDEFINED,			UNDEFINED,			"SPACE", /* 32 */			"PAGE UP",			"PAGE DOWN",			"END",			"HOME",			"LEFT",			"UP",			"RIGHT",			"DOWN",			UNDEFINED,			UNDEFINED,			UNDEFINED,			UNDEFINED,			"INSERT",			"DELETE",			UNDEFINED,			"0",			"1",			"2",			"3",			"4",			"5",			"6",			"7",			"8",			"9",			UNDEFINED,			UNDEFINED,			UNDEFINED,			UNDEFINED,			UNDEFINED,			UNDEFINED,			UNDEFINED,			"A", /* 65 */			"B",			"C",			"D",			"E",			"F",			"G",			"H",			"I",			"J",			"K",			"L",			"M",			"N",			"O",			"P",			"Q",			"R",			"S",			"T",			"U",			"V",			"W",			"X",			"Y",			"Z",			"START MENU LEFT",			"START MENU RIGHT",			"CONTEXT MENU",			UNDEFINED,			UNDEFINED,			"NUMPAD 0", /* 96 */			"NUMPAD 1",			"NUMPAD 2",			"NUMPAD 3",			"NUMPAD 4",			"NUMPAD 5",			"NUMPAD 6",			"NUMPAD 7",			"NUMPAD 8",			"NUMPAD 9",			"NUMPAD *",			"NUMPAD +",			UNDEFINED,			"NUMPAD -",			"NUMPAD .",			"NUMPAD /",			"F1", /* 112 */			"F2",			"F3",			"F4",			"F5",			"F6",			"F7",			"F8",			"F9",			"F10",			"F11",			"F12",			"F12",			UNDEFINED, UNDEFINED, UNDEFINED,			UNDEFINED, UNDEFINED, UNDEFINED,			UNDEFINED, UNDEFINED, UNDEFINED,			UNDEFINED, UNDEFINED, UNDEFINED,			UNDEFINED, UNDEFINED, UNDEFINED,			UNDEFINED,			UNDEFINED,			UNDEFINED,			UNDEFINED,			"NUMLOCK", /* 144 */			"SCROLL LOCK",			UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,			UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,			UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,			UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,			UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,			UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,			UNDEFINED,			UNDEFINED,			UNDEFINED,			UNDEFINED,			";", /* 186 */			"=",			",",			"-",			".",			"/",			"`",			UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,			UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,			UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,			UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED, UNDEFINED,			UNDEFINED, 			UNDEFINED, 			"{", /* 219 */			"\\",			"}",			"'"		];				/**		  * Get a human readable label for the key assigned to <code>keyCode</code>		  * @param keyCode number assigned to keyboard key by Flash		  * @return string label describing key represented by keyCode		  * @see flash.events.KeyboardEvent		  */		public static function getLabel(keyCode:uint):String {			return (keyCode < LABELS.length) ? String(LABELS[keyCode]) : UNDEFINED;		}				/**		  * Get a human readable label for the location assigned to <code>locCode</code>		  * @param locCode number representing key location on keyboard		  * @return string label describing key location on keyboard		  * @see flash.ui.KeyLocation		  */		public static function getLocation(locCode:uint):String {			return (locCode < LOCATIONS.length) ? String(LOCATIONS[locCode]) : UNDEFINED;		}	}}